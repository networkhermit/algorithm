require "muse/algorithms/number_theory/Primality"
require "muse/util/TestRunner"

def testPrimality
  sample = [
    [0, 1],
    [1, 1],
    [2, 2],
    [3, 2],
    [4, 4],
    [5, 2],
    [6, 4],
    [7, 2],
    [8, 4],
    [9, 4],
    [10, 4],
    [11, 2],
    [12, 4],
    [13, 2],
    [14, 4],
    [15, 4],
    [16, 4],
    [17, 2],
    [18, 4],
    [19, 2],
    [20, 4],
    [21, 4],
    [22, 4],
    [23, 2],
    [24, 4],
    [25, 4],
    [26, 4],
    [27, 4],
    [28, 4],
    [29, 2],
    [30, 4],
    [31, 2],
    [32, 4],
    [33, 4],
    [34, 4],
    [35, 4],
    [36, 4],
    [37, 2],
    [38, 4],
    [39, 4],
    [40, 4],
    [41, 2],
    [42, 4],
    [43, 2],
    [44, 4],
    [45, 4],
    [46, 4],
    [47, 2],
    [48, 4],
    [49, 4],
    [50, 4],
    [51, 4],
    [52, 4],
    [53, 2],
    [54, 4],
    [55, 4],
    [56, 4],
    [57, 4],
    [58, 4],
    [59, 2],
    [60, 4],
    [61, 2],
    [62, 4],
    [63, 4],
    [64, 4],
    [65, 4],
    [66, 4],
    [67, 2],
    [68, 4],
    [69, 4],
    [70, 4],
    [71, 2],
    [72, 4],
    [73, 2],
    [74, 4],
    [75, 4],
    [76, 4],
    [77, 4],
    [78, 4],
    [79, 2],
    [80, 4],
    [81, 4],
    [82, 4],
    [83, 2],
    [84, 4],
    [85, 4],
    [86, 4],
    [87, 4],
    [88, 4],
    [89, 2],
    [90, 4],
    [91, 4],
    [92, 4],
    [93, 4],
    [94, 4],
    [95, 4],
    [96, 4],
    [97, 2],
    [98, 4],
    [99, 4],
    [100, 4],
    [101, 2],
    [102, 4],
    [103, 2],
    [104, 4],
    [105, 4],
    [106, 4],
    [107, 2],
    [108, 4],
    [109, 2],
    [110, 4],
    [111, 4],
    [112, 4],
    [113, 2],
    [114, 4],
    [115, 4],
    [116, 4],
    [117, 4],
    [118, 4],
    [119, 4],
    [120, 4],
    [121, 4],
    [122, 4],
    [123, 4],
    [124, 4],
    [125, 4],
    [126, 4],
    [127, 2],
    [170, 4],
    [271, 2],
    [357, 4],
    [225, 4],
    [440, 4],
    [235, 4],
    [274, 4],
    [383, 2],
    [313, 2],
    [434, 4],
    [222, 4],
    [137, 2],
    [155, 4],
    [465, 4],
    [249, 4],
    [141, 4],
    [5307, 4],
    [6374, 4],
    [951, 4],
    [7236, 4],
    [2027, 2],
    [2382, 4],
    [2251, 2],
    [757, 2],
    [6678, 4],
    [3206, 4],
    [6257, 2],
    [615, 4],
    [1677, 4],
    [2086, 4],
    [4158, 4],
    [4723, 2],
    [7755, 4],
    [1583, 2],
    [6547, 2],
    [4219, 2],
    [660, 4],
    [7698, 4],
    [3121, 2],
    [3881, 2],
    [2541, 4],
    [4696, 4],
    [4091, 2],
    [5222, 4],
    [4021, 2],
    [5839, 2],
    [6048, 4],
    [5521, 2],
    [47_908, 4],
    [35_060, 4],
    [47_361, 4],
    [48_859, 2],
    [56_067, 4],
    [70_451, 2],
    [9735, 4],
    [19_763, 2],
    [97_943, 2],
    [9933, 4],
    [61_651, 2],
    [11_407, 4],
    [8774, 4],
    [48_383, 2],
    [51_001, 2],
    [73_029, 4],
    [27_690, 4],
    [30_466, 4],
    [71_479, 2],
    [84_701, 2],
    [28_643, 2],
    [57_075, 4],
    [99_745, 4],
    [100_921, 4],
    [40_496, 4],
    [9798, 4],
    [41_603, 2],
    [46_912, 4],
    [49_852, 4],
    [55_871, 2],
    [10_993, 2],
    [79_657, 2],
    [609_680, 4],
    [180_540, 4],
    [147_672, 4],
    [819_031, 2],
    [149_623, 2],
    [1_056_048, 4],
    [483_389, 2],
    [452_831, 2],
    [415_109, 2],
    [185_021, 2],
    [715_823, 2],
    [744_081, 4],
    [1_276_157, 2],
    [192_978, 4],
    [631_537, 2],
    [554_226, 4],
    [653_111, 2],
    [607_346, 4],
    [452_539, 2],
    [815_939, 2],
    [247_199, 4],
    [1_245_953, 2],
    [974_803, 2],
    [185_813, 2],
    [1_261_831, 2],
    [443_227, 2],
    [1_057_294, 4],
    [427_241, 2],
    [627_391, 2],
    [1_019_663, 2],
    [629_142, 4],
    [164_503, 2],
    [6_006_421, 2],
    [9_499_199, 2],
    [12_598_247, 2],
    [13_919_909, 2],
    [8_975_950, 4],
    [6_655_578, 4],
    [2_388_697, 2],
    [14_018_237, 4],
    [7_871_261, 2],
    [1_678_013, 2],
    [2_654_027, 2],
    [10_142_801, 2],
    [2_291_487, 4],
    [3_893_849, 2],
    [1_308_913, 4],
    [14_162_880, 4]
  ]

  sample.each_index do |i|
    case sample[i][1]
    when 1
      return false if Primality.isPrime(sample[i][0])
      return false if Primality.isComposite(sample[i][0])
    when 2
      return false unless Primality.isPrime(sample[i][0])
      return false if Primality.isComposite(sample[i][0])
    else
      return false if Primality.isPrime(sample[i][0])
      return false unless Primality.isComposite(sample[i][0])
    end
  end

  true
end

TestRunner.pick(testPrimality) if __FILE__ == $PROGRAM_NAME
