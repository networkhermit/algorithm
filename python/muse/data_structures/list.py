from typing import Protocol, runtime_checkable


@runtime_checkable
class List[T](Protocol):
    def size(self) -> int: ...

    def is_empty(self) -> bool: ...

    def get(self, index: int) -> T: ...

    def set(self, index: int, element: T) -> None: ...

    def insert(self, index: int, element: T) -> None: ...

    def remove(self, index: int) -> None: ...

    def front(self) -> T: ...

    def back(self) -> T: ...

    def prepend(self, element: T) -> None: ...

    def append(self, element: T) -> None: ...

    def poll(self) -> None: ...

    def eject(self) -> None: ...
